#define ZMK_BEHAVIORS_OMIT_KT

#undef ZMK_BEHAVIORS_KEEP_ALL

#define ZMK_BEHAVIORS_KEEP_SK
#define ZMK_BEHAVIORS_KEEP_MT
#define ZMK_BEHAVIORS_KEEP_KT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_us {
            timeout-ms = <50>;
            key-positions = <26 25>;
            bindings = <&kp LANG2>;
        };

        combo_kana {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp LANG1>;
        };

        L_CTRL {
            bindings = <&kp LCTRL>;
            key-positions = <12 13>;
        };

        L_SHIFT {
            bindings = <&kp LS(LSHIFT)>;
            key-positions = <24 25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <23 22>;
        };

        rshift {
            bindings = <&kp RSHIFT>;
            key-positions = <34 35>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <21 20>;
        };

        down {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <21 33>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <21 9>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <21 22>;
        };

        mo_util {
            bindings = <&mo 4>;
            key-positions = <36 37>;
        };

        STUDIO_UNLOCK {
            bindings = <&studio_unlock>;
            key-positions = <36 37 46 47>;
        };
    };

    macros {
        space_retuen: space_retuen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp RETURN>;
            label = "SPACE_RETUEN";
        };
    };

    behaviors {
        ht_tp: ht_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base {
            display-name = "Base";
            bindings = <
&kp Q            &kp W  &kp E         &kp R           &kp T        &none            &none            &kp Y         &kp U           &kp I           &kp O      &kp P
&ht_tp LCTRL A   &kp S  &kp D         &kp F           &kp G        &none            &none            &kp H         &kp J           &kp K           &kp L      &ht_tp RCTRL MINUS
&ht_tp LSHIFT Z  &kp X  &kp C         &kp V           &kp B        &none            &none            &kp N         &kp M           &kp COMMA       &kp DOT    &ht_tp RSHIFT SLASH
&mo 2            &mo 2  &kp LEFT_ALT  &mt LGUI LANG2  &lt 1 SPACE  &lt 3 BACKSPACE  &lt 3 BACKSPACE  &lt 1 RETURN  &mt RGUI LANG1  &kp LEFT_ARROW  &kp RIGHT  &none
            >;
        };

        symbol {
            display-name = "symbol";
            bindings = <
&kp EXCL    &kp AT  &kp HASH   &kp DOLLAR         &kp PERCENT       &none   &none    &kp CARET             &kp AMPERSAND          &kp ASTERISK      &kp PLUS           &kp EQUAL
&kp LCTRL   &none   &kp TILDE  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &none   &none    &kp COLON             &kp SEMI               &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp UNDER
&kp LSHIFT  &none   &none      &kp EQUAL          &kp PLUS          &none   &none    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp QUESTION
&trans      &trans  &trans     &trans             &trans            &trans  &kp F20  &space_retuen         &trans                 &kp DOWN_ARROW    &kp UP_ARROW       &trans
            >;
        };

        num {
            display-name = "num";
            bindings = <
&kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &none   &none   &kp N6    &kp N7  &kp N8     &kp N9   &kp N0
&kp LCTRL  &none   &none   &none   &none   &none   &none   &kp FSLH  &kp N4  &kp N5     &kp N6   &kp MINUS
&kp LSHFT  &none   &none   &none   &none   &none   &none   &kp STAR  &kp N1  &kp N2     &kp N3   &kp PLUS
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp N0  &kp COMMA  &kp DOT  &kp LS(COLON)
            >;
        };

        arrow {
            status = "reserved";
            bindings = <
&kp ESCAPE  &none               &kp LC(UP_ARROW)  &none          &none   &kp F15  &none   &kp RG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(UP_ARROW)  &kp LG(RIGHT)  &kp ESCAPE
&kp LCTRL   &kp LC(LEFT_ARROW)  &kp LC(DOWN)      &kp LC(RIGHT)  &none   &kp F14  &none   &kp LEFT_ARROW      &kp DOWN            &kp UP_ARROW      &kp RIGHT      &kp TAB
&kp LSHFT   &none               &kp LC(LA(S))     &none          &none   &kp F13  &none   &kp RA(LEFT_ARROW)  &kp RA(DOWN)        &kp RA(UP_ARROW)  &kp RA(RIGHT)  &kp RSHIFT
&trans      &trans              &trans            &trans         &trans  &trans   &trans  &kp F15             &trans              &kp DOWN_ARROW    &kp UP_ARROW   &none
            >;

            label = "arrow";
        };

        util {
            display-name = "util";
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR  &none  &none  &none  &none  &none  &none
&studio_unlock  &none         &none         &none         &none         &none       &none  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none       &none  &none  &none  &none  &none  &none
&none           &none         &none         &none         &none         &none       &none  &none  &none  &none  &none  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
